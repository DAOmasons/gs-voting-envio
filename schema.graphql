type FactoryEventsSummary {
  id: ID!
  address: String!
  admins: [String!]!
  contestTemplateCount: BigInt!
  moduleTemplateCount: BigInt!
  moduleCloneCount: BigInt!
  contestBuiltCount: BigInt!
  ContestCloneCount: BigInt!
}

type ContestTemplate {
  id: ID!
  contestVersion: String!
  contestAddress: String!
  mdProtocol: BigInt!
  mdPointer: String!
  active: Boolean!
}

type ModuleTemplate {
  id: ID!
  moduleName: String!
  templateAddress: String!
  mdProtocol: BigInt!
  mdPointer: String!
  active: Boolean!
}

type StemModule {
  id: ID!
  moduleAddress: String!
  contestAddress: String
  moduleName: String!
  moduleTemplate: ModuleTemplate!
  filterTag: String!
}

type ContestClone {
  id: ID!
  contestAddress: String!
  contestVersion: String!
  filterTag: String!
}

type Contest {
  id: ID!
  contestAddress: String!
  contestVersion: String!
  filterTag: String!
  contestStatus: BigInt!
  votesModule: StemModule!
  pointsModule: StemModule!
  executionModule: StemModule!
  choicesModule: StemModule!
  isContinuous: Boolean!
  isRetractable: Boolean!
}

type LocalLog {
  id: ID!
  message: String
}

# Grant Ships Schema

type HALParams {
  id: ID!
  hatId: BigInt!
  hatsAddress: String!
}

type TVParams {
  id: ID!
  voteDuration: BigInt!
}

type ERCPointParams {
  id: ID!
  voteTokenAddress: String!
  votingCheckpoint: BigInt!
}

type GrantShipsVoting {
  id: ID!
  contest: Contest!
  hatId: BigInt!
  hatsAddress: String!
  voteTokenAddress: String!
  votingCheckpoint: BigInt!
  voteDuration: BigInt!
}
